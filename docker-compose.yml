version: "3.8"

services:
  checkout:
    image: checkout
    build: ./checkout/
    ports:
      - 50051:50051
      - 8022:8080
    depends_on:
      - postgres-checkout
      - loms
    environment:
      - JAEGER_AGENT_HOST=jaeger
    networks:
      - net
  loms:
    build: ./loms/
    ports:
      - 50052:50052
      - 8023:8080
    depends_on:
      - postgres-loms
      - kafka1
      - kafka2
      - kafka3
    environment:
      - JAEGER_AGENT_HOST=jaeger
    networks:
      - net
  notification:
    image: notification
    build: ./notifications/
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - net

  # Postgres
  postgres-loms:
    image: postgres:15.1
    environment:
      POSTGRES_DB: loms
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: 'postgres-loms'
    volumes:
      - ./db/loms:/var/lib/postgresql/data
    ports:
      - 5413:5432
    networks:
      - net
  postgres-checkout:
    image: postgres:15.1
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: 'postgres-checkout'
    volumes:
      - ./db/checkout:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - net

  # kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
    networks:
      - net
  kafka1:
    image: confluentinc/cp-kafka:latest
    ports:
      - 29091:29091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091
    container_name: 'kafka1'
    depends_on:
      - zookeeper
    networks:
      - net
  kafka2:
    image: confluentinc/cp-kafka:latest
    ports:
      - 29092:29091
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29091
    container_name: 'kafka2'
    depends_on:
      - zookeeper
    networks:
      - net
  kafka3:
    image: confluentinc/cp-kafka:latest
    ports:
      - 29093:29091
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29091
    container_name: 'kafka3'
    depends_on:
      - zookeeper
    networks:
      - net
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8946:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: homework
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091,kafka2:29091,kafka3:29091
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - net

  # Metrics
  prometheus:
    image: prom/prometheus
    ports:
      - 9060:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - net
  grafana:
    image: grafana/grafana-oss
    ports:
      - 3010:3000
    volumes:
      - ./db/grafana:/var/lib/grafana
    networks:
      - net

  # Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.18
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411
    networks:
      - net
networks:
  net:
